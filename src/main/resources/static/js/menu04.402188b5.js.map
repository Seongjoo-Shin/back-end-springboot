{"version":3,"file":"js/menu04.402188b5.js","mappings":"6aA6BAA,QAAQC,IAAI,WAAYC,EAAMC,O,wrBC1B9B,MAAMC,EAAc,EAEpB,Q,mSCFA,MAAM,EAAc,EAEpB,Q,iTCFA,MAAM,EAAc,EAEpB,Q,qkCCFA,MAAM,EAAc,EAEpB,Q,iLC+BA,MAAMC,GAAUC,EAAAA,EAAAA,IAAS,CACvBC,GAAI,EACJC,KAAM,QAGR,SAASC,IACPJ,EAAQE,KACRF,EAAQG,MAAQ,M,mpBCxClB,MAAM,EAAc,EAEpB,S,kbCwBME,GAAQC,EAAAA,EAAAA,IAAI,UACZC,GAAQD,EAAAA,EAAAA,IAAI,KAGlB,SAASE,IACPC,EAAK,gBAAiBJ,EAAMK,MAAOH,EAAMG,OAG3C,SAASC,IACPF,EAAK,mBAGP,SAASG,IACPH,EAAK,mB,+iBCvCP,MAAMV,EAAc,EAEpB,Q,2HCgBA,MAAMc,GAAUP,EAAAA,EAAAA,IAAI,GAEpB,SAASQ,EAAkBT,GACzBV,QAAQC,IAAI,WAAYS,GAG1B,SAASU,EAAkBV,EAAOE,GAChCZ,QAAQC,IAAI,WAAYS,GACxBV,QAAQC,IAAI,WAAYW,GAG1B,SAASK,IACPC,EAAQH,Q,oNC9BV,MAAM,EAAc,EAEpB,S,0NCcA,MAAMM,GAAUC,EAAAA,EAAAA,IAAO,WAEvB,SAASb,IACPY,EAAQX,MAAMK,OAAS,IACvBM,EAAQT,MAAMG,MAAMQ,OAAS,IAC7BF,EAAQT,MAAMG,MAAMS,OAAS,IAC7BH,EAAQI,MAAMC,OAAS,IACvBL,EAAQI,MAAME,OAAS,I,4fCvBzB,MAAMvB,EAAc,EAEpB,Q,kHCaA,MAAMiB,GAAUC,EAAAA,EAAAA,IAAO,W,obCfvB,MAAM,EAAc,EAEpB,Q,mMCFA,MAAM,EAAc,EAEpB,Q,+HCYA,MAAMZ,GAAQC,EAAAA,EAAAA,IAAI,iBACZC,GAAQD,EAAAA,EAAAA,IAAI,CAACY,MAAO,gBAAiBC,MAAO,kBAC5CC,GAAQnB,EAAAA,EAAAA,IAAS,CAACoB,MAAO,gBAAiBC,MAAO,kB,OAEvDC,EAAAA,EAAAA,IAAQ,UAAW,CAAClB,MAAAA,EAAOE,MAAAA,EAAOa,MAAAA,I,gHClBlC,MAAM,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu04/Exam01Props/ChildA.vue","webpack://front-end-vue/./src/views/menu04/Exam01Props/ChildA.vue?fcaa","webpack://front-end-vue/./src/views/menu04/Exam01Props/ChildB.vue","webpack://front-end-vue/./src/views/menu04/Exam01Props/ChildC.vue","webpack://front-end-vue/./src/views/menu04/Exam01Props/ChildD.vue","webpack://front-end-vue/./src/views/menu04/Exam01Props/index.vue","webpack://front-end-vue/./src/views/menu04/Exam01Props/index.vue?11bf","webpack://front-end-vue/./src/views/menu04/Exam02EventEmit/Child.vue","webpack://front-end-vue/./src/views/menu04/Exam02EventEmit/Child.vue?2099","webpack://front-end-vue/./src/views/menu04/Exam02EventEmit/index.vue","webpack://front-end-vue/./src/views/menu04/Exam02EventEmit/index.vue?7558","webpack://front-end-vue/./src/views/menu04/Exam03ProvideInject/ChildA.vue","webpack://front-end-vue/./src/views/menu04/Exam03ProvideInject/ChildA.vue?01e8","webpack://front-end-vue/./src/views/menu04/Exam03ProvideInject/ChildB/ChildC.vue","webpack://front-end-vue/./src/views/menu04/Exam03ProvideInject/ChildB/ChildC.vue?f4ac","webpack://front-end-vue/./src/views/menu04/Exam03ProvideInject/ChildB/index.vue","webpack://front-end-vue/./src/views/menu04/Exam03ProvideInject/index.vue","webpack://front-end-vue/./src/views/menu04/Exam03ProvideInject/index.vue?cc3c"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      ChildA\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <p>prop1: {{$attrs.prop1}}</p>\r\n        <p>prop2: {{$attrs.prop2}}</p>\r\n        <p>productNo: {{$attrs.productNo}}</p>\r\n        <p>productKind: {{$attrs[\"product-kind\"]}}</p>\r\n        <p>productPrice: {{$attrs.productPrice}}</p>        \r\n      </div>\r\n      <hr/>\r\n      <div>\r\n        <p>prop1: {{prop1}}</p>\r\n        <p>prop2: {{prop2}}</p>\r\n        <p>productNo: {{productNo}}</p>\r\n        <p>productKind: {{productKind}}</p>\r\n        <p>productPrice: {{productPrice}}</p>        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from \"vue\";\r\nconst props =  defineProps([\"prop1\", \"prop2\", \"productNo\", \"productKind\", \"productPrice\"]);\r\n\r\nconsole.log(\"prop1 : \", props.prop1);\r\n// defineProps은 props 객체를 리턴한다\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./ChildA.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChildA.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ChildB.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChildB.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ChildC.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChildC.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ChildD.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChildD.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Exam01Props\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <!-- v-bind=\"product\"는 자동으로 구조분해되어서 윗줄 형태로 넘어감 -->\r\n      \r\n      <ChildA prop1=\"value1\" prop2=\"value2\" productNo=\"1\" product-kind=\"bag\" :productPrice=\"1000\"/>\r\n      <hr/>\r\n      <ChildB :no=\"product.no\" :kind=\"product.kind\"/>\r\n      <ChildB v-bind=\"product\"/>\r\n      <ChildC :product=\"product\"/>\r\n      <button @click=\"changeData\" class=\"btn btn-info btn-sm mt-2\">데이터 변경</button>\r\n      <hr/>\r\n      <ChildD propA=\"문자열\" \r\n              :propB=\"1\" \r\n              :prop-c=\"2\"\r\n              :prop-d=\"'valuec'\"\r\n              :prop-e=\"3\"\r\n              :prop-f=\"{message: '안녕하세요'}\"\r\n              :prop-g=\"['red', 'green', 'blue']\"\r\n              :prop-h=\"()=>{return 'prop value'}\"\r\n              :prop-i=\"4\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport ChildA from \"./ChildA\";\r\nimport ChildB from \"./ChildB\";\r\nimport ChildC from \"./ChildC\";\r\nimport ChildD from \"./ChildD\";\r\nimport { reactive } from \"vue\";\r\n\r\n// 반응형 속성 선언\r\nconst product = reactive({\r\n  no: 1,\r\n  kind: \"bag\",\r\n});\r\n\r\nfunction changeData() {\r\n  product.no++; // reactive 는 .value 안씀 | ref는 .value 씀\r\n  product.kind += \"bag\";\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Child\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <h6>[자식 -> 부모]</h6>\r\n        <button @click=\"$emit('child-event-1', data1)\" class=\"btn btn-info btn-sm mr-2\">child-event-1 emit</button>\r\n        <button @click=\"handleChildEmit2\" class=\"btn btn-info btn-sm mr-2\">child-event-2 emit</button>\r\n      </div>\r\n      <hr/>\r\n      <div>\r\n        <h6>[자식 (event) -> 부모 (props) -> 자식]</h6>\r\n        <button @click=\"handleIncrementEvent\" class=\"btn btn-info btn-sm mr-2\">increment-event emit</button>\r\n        <button @click=\"handleDecrementEvent\" class=\"btn btn-info btn-sm mr-2\">decrement-event emit</button>\r\n        <p>Counter : {{counter}}</p> <!-- 부모에서 받은 prop이라고 가정한 상황 -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineEmits, defineProps } from \"vue\";\r\n\r\nconst props = defineProps([\"counter\"]);\r\nconst emit = defineEmits([\"child-event-2\", \"increment-event\", \"decrement-event\"]);\r\n\r\n// 컴포넌트 속성 선언\r\nconst data1 = ref(\"value1\");\r\nconst data2 = ref(100);\r\n\r\n// 컴포넌트 메소드 선언\r\nfunction handleChildEmit2() {\r\n  emit(\"child-event-2\", data1.value, data2.value);\r\n}\r\n\r\nfunction handleIncrementEvent() {\r\n  emit(\"increment-event\");\r\n}\r\n\r\nfunction handleDecrementEvent() {\r\n  emit(\"decrement-event\");\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./Child.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Child.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Exam02EventEmit\r\n    </div>\r\n    <div class=\"card-body\">\r\n       <!-- counter는 반응형 속성 -->\r\n      <Child @child-event-1=\"handleChildEvent1\"\r\n             @child-event-2=\"handleChildEvent2\"\r\n             :counter=\"counter\"\r\n             @increment-event=\"counter++\"\r\n             @decrement-event=\"handleDecrementEvent\" />\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Child from \"./Child.vue\";\r\nimport { ref } from \"vue\";\r\n\r\nconst counter = ref(0);\r\n\r\nfunction handleChildEvent1(data1) {\r\n  console.log(\"data1 : \", data1);\r\n}\r\n\r\nfunction handleChildEvent2(data1, data2) {\r\n  console.log(\"data1 : \", data1);\r\n  console.log(\"data2 : \", data2);\r\n}\r\n\r\nfunction handleDecrementEvent() {\r\n  counter.value--; // ref는 .value로 접근\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      ChildA\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <p>data1 : {{message.data1}}</p>\r\n      <p>data2.value.name1 : {{message.data2.value.name1}}</p>\r\n      <p>data2.value.name2 : {{message.data2.value.name2}}</p>\r\n      <p>data3.name3 : {{message.data3.name3}}</p>\r\n      <p>data3.name4 : {{message.data3.name4}}</p>\r\n      <button @click=\"changeData\" class=\"mt-2 btn btn-info btn-sm\">데이터 변경</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject } from \"vue\";\r\n\r\nconst message = inject(\"message\"); // provide에서 등록한 이름\r\n\r\nfunction changeData() {\r\n  message.data1.value += \"1\";\r\n  message.data2.value.name1 += \"2\";\r\n  message.data2.value.name2 += \"3\";\r\n  message.data3.name3 += \"4\";\r\n  message.data3.name4 += \"5\";\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./ChildA.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChildA.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      ChildC\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <p>data1 : {{message.data1}}</p>\r\n      <p>data2.value.name1 : {{message.data2.value.name1}}</p>\r\n      <p>data2.value.name2 : {{message.data2.value.name2}}</p>\r\n      <p>data3.name3 : {{message.data3.name3}}</p>\r\n      <p>data3.name4 : {{message.data3.name4}}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject } from \"vue\";\r\n\r\nconst message = inject(\"message\"); // provide에서 등록한 이름\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./ChildC.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChildC.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Exam03ProvideInject\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <ChildA class=\"mb-2\"/>\r\n      <ChildB/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, provide } from \"vue\";\r\nimport ChildA from \"./ChildA.vue\";\r\nimport ChildB from \"./ChildB\";\r\n\r\nconst data1 = ref(\"parent-value1\");\r\nconst data2 = ref({name1: \"parent-value2\", name2: \"parent-value3\"});\r\nconst data3 = reactive({name3: \"parent-value4\", name4: \"parent-value5\"});\r\n\r\nprovide(\"message\", {data1, data2, data3}); // key, value가 서로 이름이 같아서 이 형태로 작성 가능\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["console","log","props","prop1","__exports__","product","reactive","no","kind","changeData","data1","ref","data2","handleChildEmit2","emit","value","handleIncrementEvent","handleDecrementEvent","counter","handleChildEvent1","handleChildEvent2","message","inject","name1","name2","data3","name3","name4","provide"],"sourceRoot":""}